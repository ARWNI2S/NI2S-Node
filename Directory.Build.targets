<Project>
  <!-- Reference source link packages (if needed) -->
  <ItemGroup Condition="'$(IsPackable)'=='true' and '$(SourceLinkCreate)'=='true' and '$(IncludeBuildOutput)'=='true'">
    <PackageReference Include="Microsoft.SourceLink.AzureRepos.Git" PrivateAssets="All"/>
    <PackageReference Include="Microsoft.SourceLink.GitHub" PrivateAssets="all" />
  </ItemGroup>

  <!-- Source link Url translation properties -->
  <PropertyGroup>
    <!-- Set DisableSourceLinkUrlTranslation to true when building a tool for internal use where sources only come from internal URIs -->
    <DisableSourceLinkUrlTranslation Condition="'$(DisableSourceLinkUrlTranslation)' == ''">false</DisableSourceLinkUrlTranslation>
    <_TranslateUrlPattern>dummys://.*\.visualstudio\.com/.*/_git/[^/]*</_TranslateUrlPattern>
    <_TranslateUrlReplacement>$(PublicRepositoryUrl)</_TranslateUrlReplacement>
  </PropertyGroup>

  <!-- Source link Url translation Target -->
  <Target Name="_TranslateAzureDevOpsUrlToGitHubUrl"
          Condition="'$(DisableSourceLinkUrlTranslation)' == 'false'"
          DependsOnTargets="$(SourceControlManagerUrlTranslationTargets)"
          BeforeTargets="SourceControlManagerPublishTranslatedUrls">
    <PropertyGroup>
      <ScmRepositoryUrl>$([System.Text.RegularExpressions.Regex]::Replace($(ScmRepositoryUrl), $(_TranslateUrlPattern), $(_TranslateUrlReplacement)))</ScmRepositoryUrl>
    </PropertyGroup>
    <ItemGroup>
      <RepoRoot Update="@(RepoRoot)">
        <ScmRepositoryUrl>$([System.Text.RegularExpressions.Regex]::Replace(%(RepoRoot.ScmRepositoryUrl), $(_TranslateUrlPattern), $(_TranslateUrlReplacement)))</ScmRepositoryUrl>
      </RepoRoot>
    </ItemGroup>
  </Target>

</Project>
