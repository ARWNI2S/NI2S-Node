<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Collections_ArgMustNotBeNegative" xml:space="preserve">
    <value>El argumento no puede ser menor que cero.</value>
  </data>
  <data name="Collections_ArrayTooSmall" xml:space="preserve">
    <value>La matriz es demasiado pequeña para contener todos los elementos.</value>
  </data>
  <data name="Collections_BadComparandType" xml:space="preserve">
    <value>El comparador no es del tipo correcto.</value>
  </data>
  <data name="Collections_CannotModifyCollection" xml:space="preserve">
    <value>La colección \"{0}\" es de solo lectura y no se puede modificar.</value>
  </data>
  <data name="Collections_CapacityLessThanCount" xml:space="preserve">
    <value>La capacidad no puede ser inferior a Count.</value>
    <comment>TODO: replace Count for name, format.</comment>
  </data>
  <data name="Collections_ChangeDuringEnumeration" xml:space="preserve">
    <value>La colección fue modificada durante la enumeración.</value>
  </data>
  <data name="Collections_CollectionIsEmpty" xml:space="preserve">
    <value>La colección está vacía.</value>
  </data>
  <data name="Collections_CollectionIsReadOnly" xml:space="preserve">
    <value>La colección no puede ser de solo lectura.</value>
  </data>
  <data name="Collections_CollectionTooLarge" xml:space="preserve">
    <value>La colección se ha vuelto demasiado grande.</value>
  </data>
  <data name="Collections_IdentityComparerNoCompare" xml:space="preserve">
    <value>El método Compare no se admite en un comparador de identidad.</value>
  </data>
  <data name="Collections_InconsistentComparisons" xml:space="preserve">
    <value>Las dos colecciones no se pueden combinar porque usan diferentes operaciones de comparación.</value>
  </data>
  <data name="Collections_InvalidLoadFactor" xml:space="preserve">
    <value>El factor de carga debe estar entre 0.25 y 0.95.</value>
  </data>
  <data name="Collections_KeyAlreadyPresent" xml:space="preserve">
    <value>La clave ya estaba presente en el diccionario.</value>
  </data>
  <data name="Collections_KeyNotFound" xml:space="preserve">
    <value>La clave no se encontró en la colección.</value>
  </data>
  <data name="Collections_ListIsReadOnly" xml:space="preserve">
    <value>La lista no puede ser de solo lectura.</value>
  </data>
  <data name="Collections_MustOverrideIndexerGet" xml:space="preserve">
    <value>El descriptor de acceso get del indexador debe sobrecargarse.</value>
  </data>
  <data name="Collections_MustOverrideIndexerSet" xml:space="preserve">
    <value>El descriptor de acceso establecido del indexador debe sobrecargarse.</value>
  </data>
  <data name="Collections_MustOverrideOrReimplement" xml:space="preserve">
    <value>Este método debe sobrecargarse o volver a implementarse en la clase derivada.</value>
  </data>
  <data name="Collections_OutOfViewRange" xml:space="preserve">
    <value>El argumento está fuera del rango de esta vista.</value>
  </data>
  <data name="Collections_ResetNotSupported" xml:space="preserve">
    <value>Reset no es compatible con este enumerador.</value>
  </data>
  <data name="Collections_TypeNotCloneable" xml:space="preserve">
    <value>El tipo \"{0}\" no implementa ICloneable.</value>
  </data>
  <data name="Collections_UncomparableType" xml:space="preserve">
    <value>El tipo "{0}" no implementa IComparable&lt;{0}&gt; o IComparable.</value>
  </data>
  <data name="Collections_WrongType" xml:space="preserve">
    <value>El valor \"{0}\" no es del tipo \"{1}\" y no se puede usar en esta colección genérica.</value>
  </data>
  <data name="CommonStrings_No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="CommonStrings_PressAKeyToContinue" xml:space="preserve">
    <value>Por favor presione una tecla para continuar...</value>
  </data>
  <data name="CommonStrings_Yes" xml:space="preserve">
    <value>Sí</value>
  </data>
  <data name="Debugging_DefaultAssert" xml:space="preserve">
    <value>La condición afirmada era falsa.</value>
  </data>
  <data name="Debugging_DefaultAssertFormat" xml:space="preserve">
    <value>La condición afirmada por {0} en {1} era falsa.</value>
  </data>
  <data name="DomainManager_CreateDomain_Format" xml:space="preserve">
    <value>Creando dominio {0}</value>
  </data>
  <data name="DomainManager_DomainCreated_Format" xml:space="preserve">
    <value>Dominio {0} creado. {1}</value>
  </data>
  <data name="DomainManager_ExitCode_Format" xml:space="preserve">
    <value>ExitCode = {0}</value>
    <comment>{0} - exitCode</comment>
  </data>
  <data name="DomainManager_Initialize_Format" xml:space="preserve">
    <value>Inicializando dominio para la aplicación {0}</value>
  </data>
  <data name="DomainManager_IsFullTrust_Format" xml:space="preserve">
    <value>EsTotalmenteConfiable = {0}</value>
  </data>
  <data name="DomainManager_RunMessage_Format" xml:space="preserve">
    <value>Ejecutando {0}</value>
    <comment>{0} - Path.GetFileName(assemblyFilename)</comment>
  </data>
  <data name="Logger_LogMessageTruncated_Format" xml:space="preserve">
    <value>"{0}. ¡MENSAJE TRUNCADO EN ESTE PUNTO! Tamaño máximo de mensaje = {1}"</value>
  </data>
  <data name="Logging_ConsoleText_WriteError" xml:space="preserve">
    <value>Exception = </value>
    <comment>Exception'space'='space'</comment>
  </data>
  <data name="TimerAfterCallbackAsync" xml:space="preserve">
    <value>Devolución de llamada del temporizador de tarea asíncrona completada para el temporizador {0}</value>
  </data>
  <data name="TimerAfterCallbackSync" xml:space="preserve">
    <value>Devolución de llamada del temporizador de sincronización completada para el temporizador {0}</value>
  </data>
  <data name="TimerBeforeCallbackAsync" xml:space="preserve">
    <value>A punto de realizar una devolución de llamada del temporizador de tareas asincrónicas para el temporizador {0}</value>
  </data>
  <data name="TimerBeforeCallbackSync" xml:space="preserve">
    <value>A punto de realizar una devolución de llamada del temporizador de sincronización para el temporizador {0}</value>
  </data>
  <data name="TimerChanging" xml:space="preserve">
    <value>Cambiando el temporizador {0} a dueTime={1} period={2}</value>
  </data>
  <data name="TimerChanging_Creating" xml:space="preserve">
    <value>Creando el temporizador {0} con dueTime={1} period={2}</value>
  </data>
  <data name="TimerChanging_Queue" xml:space="preserve">
    <value>Acerca de QueueNextTimerTick para el temporizador {0}</value>
  </data>
  <data name="TimerDisposing" xml:space="preserve">
    <value />
  </data>
  <data name="TimerNextTick" xml:space="preserve">
    <value>Siguiente tic en cola para el temporizador {0} en {1}</value>
  </data>
  <data name="TimerStopped" xml:space="preserve">
    <value>El temporizador {0} ahora está detenido y desechado</value>
  </data>
  <data name="TraceLogger_Assert_FailMessage" xml:space="preserve">
    <value>La afirmación falló con el mensaje =</value>
  </data>
  <data name="TraceLogger_Assert_Message" xml:space="preserve">
    <value>¡La aserción del contrato interno ha fallado!</value>
  </data>
  <data name="TraceLogger_CheckBulkMessageLimits_Format" xml:space="preserve">
    <value>El código de registro {0} ocurrió {1} tiempo adicional {2} en el {3} anterior</value>
  </data>
  <data name="TraceLogger_ConfigDataMissing" xml:space="preserve">
    <value>No se proporcionaron datos de configuración del registrador.</value>
  </data>
  <data name="TraceLogger_Fail_ErrorMessage" xml:space="preserve">
    <value>¡FALLO INTERNO! ¡A punto de caer! El mensaje de error es:</value>
  </data>
  <data name="TraceLogger_Fail_Message" xml:space="preserve">
    <value>¡Fallo interno!</value>
  </data>
  <data name="TraceLogger_Fail_UnrecoverableMessage" xml:space="preserve">
    <value>Fallo irrecuperable:</value>
  </data>
  <data name="TraceLogger_Initialize_ArgumentNullException" xml:space="preserve">
    <value>No se proporcionaron datos de configuración del registrador.</value>
  </data>
  <data name="TraceLogger_LogWithoutBulkingAndTruncating_Format" xml:space="preserve">
    <value>MENSAJE PARTIDO Parte {0}: {1}</value>
    <comment>{0} - partNum, {1} - message.Substring(startIndex, chunkSize)</comment>
  </data>
  <data name="TraceLogger_PrintException_Helper_NoExceptionsMesage" xml:space="preserve">
    <value>No se encontraron LoaderExceptions</value>
  </data>
  <data name="TraceLogger_PrintOneException_Format" xml:space="preserve">
    <value>Nivel de excepción {0}: {1}: {2}{3}</value>
  </data>
  <data name="TraceLogger_WriteLogMessage_ExceptionFormat" xml:space="preserve">
    <value>Excepción al pasar un mensaje de registro al consumidor de registros. Tipo de TraceLogger:{0}, nombre:{1}, gravedad:{2}, mensaje:{3}, código de error:{4}, excepción de mensaje:{5}, registro de excepción del consumidor:{6}</value>
    <comment>{0} - consumer.GetType().FullName, {1} - logName, {2} - sev, {3} - message, {4} - errorCode, {5} - exception, {6} - exc</comment>
  </data>
  <data name="TraceLogger_WriteLogMessage_MessageTruncatedText" xml:space="preserve">
    <value>El mensaje de registro anterior se truncó - Tamaño máximo =</value>
    <comment>Max size'space'='space'</comment>
  </data>
</root>